//
//  Examples.swift
//  QiinnReader
//
//  Created by 吉岡雄也 on 2022/12/18.
//

import Foundation

struct QiitaModelExamples {
    static func createQiitaItemFactory() -> QiitaItem {
        return QiitaItem(
            renderedBody: "\n<h2>\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n\n<p>どんな仕事でも強い人は存在する。<br>\nでも最初から強い人は珍しい。<br>\nこれは、web 業界に身を置いてみて、信じられないくらい<strong>ムキムキ</strong>になっていった人たちを見てきた私が送る <strong>こうしたら強くなれるかもしれない？指南書</strong>である。もしエンジニア職に興味があるのであれば、一考になるかもしれない。</p>\n\n<h2>\n<span id=\"最初から強いやつの特徴\" class=\"fragment\"></span><a href=\"#%E6%9C%80%E5%88%9D%E3%81%8B%E3%82%89%E5%BC%B7%E3%81%84%E3%82%84%E3%81%A4%E3%81%AE%E7%89%B9%E5%BE%B4\"><i class=\"fa fa-link\"></i></a>最初から強いやつの特徴</h2>\n\n<ul>\n<li>平日の稼働時間以外も勉強 or 開発する</li>\n<li>土日も勉強 or 開発する</li>\n<li>公式ドキュメントをちゃんと読む</li>\n</ul>\n\n<p>以上のような当たり前のことは、<strong>最初から強い人じゃなくてもやる</strong>ので特徴に入れません。</p>\n\n<h3>\n<span id=\"1-読解能力が異常に高い\" class=\"fragment\"></span><a href=\"#1-%E8%AA%AD%E8%A7%A3%E8%83%BD%E5%8A%9B%E3%81%8C%E7%95%B0%E5%B8%B8%E3%81%AB%E9%AB%98%E3%81%84\"><i class=\"fa fa-link\"></i></a>1. 読解能力が異常に高い</h3>\n\n<ul>\n<li>国語の力です。</li>\n<li>これは、ちゃんとドキュメントに書いてあることが理解できると同義です。</li>\n<li>そしてこれが本当に大事です。</li>\n<li>強い人に質問すると必ず「<strong>ん？ Docs 読んだ？</strong>」って聞いてきます。私は (...読んだわ！) って内心思ってますが、それは読んだだけです。内容をちゃんと汲み取れてない可能性が非常に高いです。　\n\n<ul>\n<li>強い人が同じドキュメントを読むと、「ほら、ここに書いてあるじゃん。」って必ずいいます。</li>\n</ul>\n</li>\n</ul>\n\n<h3>\n<span id=\"2-そもそもそれいるん-を臆せずに言える\" class=\"fragment\"></span><a href=\"#2-%E3%81%9D%E3%82%82%E3%81%9D%E3%82%82%E3%81%9D%E3%82%8C%E3%81%84%E3%82%8B%E3%82%93-%E3%82%92%E8%87%86%E3%81%9B%E3%81%9A%E3%81%AB%E8%A8%80%E3%81%88%E3%82%8B\"><i class=\"fa fa-link\"></i></a>2. 「そもそもそれいるん ？」を臆せずに言える</h3>\n\n<ul>\n<li>タスクをアサインされたら、<strong>何がなんでもその通りにしないといけない！</strong> という強迫観念に苛まれることがあります。</li>\n<li>それは幻想らしいです。</li>\n<li>「そもそもそれやる必要あるん？」という呪文を強い人はみんな何故か口を揃えて詠唱してきます。</li>\n<li><strong>これは最終的なゴールがちゃんと見えているからこそ言えると思っています。</strong></li>\n</ul>\n\n<h3>\n<span id=\"3-タスクを適切な粒度で実行する\" class=\"fragment\"></span><a href=\"#3-%E3%82%BF%E3%82%B9%E3%82%AF%E3%82%92%E9%81%A9%E5%88%87%E3%81%AA%E7%B2%92%E5%BA%A6%E3%81%A7%E5%AE%9F%E8%A1%8C%E3%81%99%E3%82%8B\"><i class=\"fa fa-link\"></i></a>3. タスクを適切な粒度で実行する</h3>\n\n<ul>\n<li>タスクのスコープが広範囲すぎると、自分でもゴールを見失いやすく、レビュワーも「<strong>これ何をレビューすればいいの？</strong>」という大変不幸な状態になります。</li>\n<li>また、スコープが広いので、実装に時間がかかってしまい、どうしても停滞している感が否めなくなってきます。</li>\n<li>最初から強い人は、<strong>何故かこのタスクの粒度設定が信じられないくらいうまいです</strong>。タスクが大きすぎたり難しすぎたりすると、細かくタスクを分割し、周りの人の協力を得ながら、着実に階段を登って行きます。</li>\n<li>ベテランのエンジニアと一緒にストーリーの作成をするとき、抽象的なイメージでモヤモヤしている状態から、明確にストーリーが出来上がってくる様は、ある種の感動を覚えます。最初から強い人は、ベテランのエンジニアと同じ視点を持っていると思っています。</li>\n</ul>\n\n<h3>\n<span id=\"4-優先順位を理解している\" class=\"fragment\"></span><a href=\"#4-%E5%84%AA%E5%85%88%E9%A0%86%E4%BD%8D%E3%82%92%E7%90%86%E8%A7%A3%E3%81%97%E3%81%A6%E3%81%84%E3%82%8B\"><i class=\"fa fa-link\"></i></a>4. 優先順位を理解している</h3>\n\n<ul>\n<li>これはベテランになればみんな到達するかもしれないですが、最初からできる人はなかなかいません。</li>\n<li>でも最初から強い人は不思議とできます。</li>\n<li>ゴールが明確に見えている証拠ですね。</li>\n</ul>\n\n<h3>\n<span id=\"5-log-をちゃんと追える\" class=\"fragment\"></span><a href=\"#5-log-%E3%82%92%E3%81%A1%E3%82%83%E3%82%93%E3%81%A8%E8%BF%BD%E3%81%88%E3%82%8B\"><i class=\"fa fa-link\"></i></a>5. Log をちゃんと追える</h3>\n\n<ul>\n<li>これも強い人は何故か最初からできる。\n\n<ul>\n<li>というか何で最初の頃はあんなにできなかったんだろうってくらい私はできなかった。</li>\n</ul>\n</li>\n<li>そして error 箇所がわかったら、その内容をググるんだけど、強い人たちは、見に行くところが共通している。もう、びっくりするくらい一緒。\n\n<ul>\n<li>公式ドキュメント</li>\n<li>GitHub の Issue </li>\n</ul>\n</li>\n</ul>\n\n<h3>\n<span id=\"6-最下層に到達できる\" class=\"fragment\"></span><a href=\"#6-%E6%9C%80%E4%B8%8B%E5%B1%A4%E3%81%AB%E5%88%B0%E9%81%94%E3%81%A7%E3%81%8D%E3%82%8B\"><i class=\"fa fa-link\"></i></a>6. 最下層に到達できる</h3>\n\n<ul>\n<li>コードを書いていると、「多分間違ってないけど上手くいかない...」的なことが私にはよく発生します。(100 % 間違っているから動かないんですが...)</li>\n<li>それは、<strong>誰かが作った関数は絶対正しい！という前提で進めているから</strong>そういうことが起きます。</li>\n<li>どんなに優秀なエンジニアが作ったものでも疑いましょう。</li>\n<li>直に書いてあるソースならば、「ああ、ここがおかしい」と気づきますが、こと Library で使っている関数は<strong>無条件スルー</strong>をしてしまいます。</li>\n<li>しかし最初から強い人は、Library であろうがなんであろうが、その関数が「何やってんねん？」 というところまで潜っていきます。それは公式ドキュメントや Github の該当ソースコードまで潜って何をしているかという事実を集め、問題の切り分けにいかします。</li>\n</ul>\n\n<h3>\n<span id=\"7-横着な-commit-をしない\" class=\"fragment\"></span><a href=\"#7-%E6%A8%AA%E7%9D%80%E3%81%AA-commit-%E3%82%92%E3%81%97%E3%81%AA%E3%81%84\"><i class=\"fa fa-link\"></i></a>7. 横着な commit をしない</h3>\n\n<ul>\n<li>これは 3 と似ているが、確実にできるようになったところで一旦 commit するというものです。</li>\n<li>そのまま変更を commit せずに開発すると、うまく動作しなくなったときに、どこで躓いたかのかが分かりづらくなり、速度が落ちてしまいます。</li>\n<li>強い人は綺麗な commit メッセージを残す。\n\n<ul>\n<li>補足します。</li>\n<li>これは、横着な commit をすると、commit するメッセージがとても長くなってしまいます。すると、その commit メッセージを書くのがだるくなって、私は fix hoge とか add fugaFunction etc とかだけにしてしまいます。</li>\n<li>それは、一気に機能を実装しているから(横着しているから)よくない commit メッセージになります。</li>\n<li>綺麗な commit メッセージとは、<strong>何を実装したのかを過不足なく記す</strong>ということです。</li>\n<li>これは、人にもよるのですが、強い人とペアプロをするとよくわかります。非常に綺麗です。</li>\n</ul>\n</li>\n</ul>\n\n<h3>\n<span id=\"8-質問がまとまっていて回答しやすい\" class=\"fragment\"></span><a href=\"#8-%E8%B3%AA%E5%95%8F%E3%81%8C%E3%81%BE%E3%81%A8%E3%81%BE%E3%81%A3%E3%81%A6%E3%81%84%E3%81%A6%E5%9B%9E%E7%AD%94%E3%81%97%E3%82%84%E3%81%99%E3%81%84\"><i class=\"fa fa-link\"></i></a>8. 質問がまとまっていて回答しやすい</h3>\n\n<ul>\n<li>ちょっと当たり前すぎて入れるか迷ったけれど、特徴なので入れます。</li>\n<li>何がわからないかを言語化するというのは、思っている以上に難しいです。\n\n<ul>\n<li>今どこまでできているのか？ そして何ができていないのか？ できないことに対しては、何が障壁になっているのか？ どういうアプローチを実践してみたのか？ を簡潔に文書に起こす力が必要です。</li>\n<li>自分だけなのかもしれないのですが、私は説明を端折る癖があり、いっつも PM に「5W1H を適切につけて説明してくれ...」と呆れられます。(とは言っても PM はエスパーなので高確度で捕捉してくれるんですが...)</li>\n<li>自分の中にしか前提条件はありません。</li>\n<li>最初から強い人は、誰が聞いたって意味が一意に決まるものの言い方 or 書き方しかしません。</li>\n</ul>\n</li>\n</ul>\n\n<h3>\n<span id=\"9-新しいことに対して一切物怖じしない\" class=\"fragment\"></span><a href=\"#9-%E6%96%B0%E3%81%97%E3%81%84%E3%81%93%E3%81%A8%E3%81%AB%E5%AF%BE%E3%81%97%E3%81%A6%E4%B8%80%E5%88%87%E7%89%A9%E6%80%96%E3%81%98%E3%81%97%E3%81%AA%E3%81%84\"><i class=\"fa fa-link\"></i></a>9. 新しいことに対して一切物怖じしない</h3>\n\n<ul>\n<li>羨ましい限りである。</li>\n<li>どうしても私は「うわっ！」って思ってしまう。</li>\n<li>強い人たちは「<strong>ちゃんと読めばわからないわけがない</strong>」というマインドもさることながら、<strong>常に何か新しいことを探していて、隙あらば使おうとしている。</strong>（個人ではすでに使用している。）</li>\n<li>「もう動くから今のままでええやん..」というのは普通の人の考え方である。</li>\n</ul>\n\n<h2>\n<span id=\"強くなるには\" class=\"fragment\"></span><a href=\"#%E5%BC%B7%E3%81%8F%E3%81%AA%E3%82%8B%E3%81%AB%E3%81%AF\"><i class=\"fa fa-link\"></i></a>強くなるには？</h2>\n\n<p>強くなるには上にあげたようなことをすれば、多分強くなれると思います。<br>\n加えて、私が大事だと思っていることを書きます。</p>\n\n<ul>\n<li>\n<p><strong>強い人とディスカッションする</strong></p>\n\n<ul>\n<li>これは凡人にとって非常に有効です。</li>\n<li>我が社には Boot camp という制度があるのですが、これは、Java をベースとしてプログラミングの大事な概念やオブジェクト指向を勉強し、強い人に理解度をチェックしてもらうというものです。</li>\n<li>この強い人が強すぎて大抵の理解度チェックはボコボコにされ、1 回ではなかなか pass できません。</li>\n<li>ちなみに以前の記事 <a href=\"https://qiita.com/zamis/items/abea48e1fdb16a3bf6eb\" id=\"reference-e2218a9ffd62a97bc649\">Web 業界に参入して 1 年経ったけど、なにしてきたん？</a> でもちらっと書いたんですが、私はクラスとインスタンスの章で 3 回やり直しをくらいました。</li>\n<li>しかし、このディスカッションを経て、正解に辿り着いた時には<strong>新しい自分に出会えます</strong>。</li>\n<li>読解力の低い人間は、ちょっと本を読んだくらいでは、その真髄に辿り着くことはできません。</li>\n<li>強い人は、弱い人がわかるレベルにまで落として基本となる概念を説明してくれます。</li>\n<li>なので、できるなら強い人にたくさんのことを聞きましょう。</li>\n</ul>\n</li>\n<li>\n<p><strong>頑張っている人は、夢中になっている人には勝てない</strong></p>\n\n<ul>\n<li>これは私の PM の言葉ですが、我々が強くなるには最も有効かもしれません。</li>\n<li>結局、夢中になれるからこそ、今の自分がいると思っています。</li>\n</ul>\n</li>\n</ul>\n\n<h2>\n<span id=\"最後に\" class=\"fragment\"></span><a href=\"#%E6%9C%80%E5%BE%8C%E3%81%AB\"><i class=\"fa fa-link\"></i></a>最後に</h2>\n\n<p>ここにあげたものはあくまでも私の観測範囲内のことで、サンプル数が少なすぎますが、参考になれば幸いです。また、思いついたらこっそり継ぎ足していきます。</p>\n\n<p>最後まで読んでいただきありがとうございました。</p>\n\n<h2>\n<span id=\"宣伝\" class=\"fragment\"></span><a href=\"#%E5%AE%A3%E4%BC%9D\"><i class=\"fa fa-link\"></i></a>(...宣伝)</h2>\n\n<ul>\n<li>\n<a href=\"https://growi.org/ja/\" rel=\"nofollow noopener\" target=\"_blank\">GROWI</a> : Wiki ツール。Saas の <a href=\"https://growi.cloud/\" rel=\"nofollow noopener\" target=\"_blank\">GROWI.cloud</a> もあるよ！</li>\n<li>\n<a href=\"https://www.webev.cloud/\" rel=\"nofollow noopener\" target=\"_blank\">Webev</a>: Bookmark 管理ツール。自分の大事なブックマークたちをを本棚に収納しよう！</li>\n</ul>\n",
            body: "この記事は[2022年天文情報学AdventCalendar](https://qiita.com/advent-calendar/2022/astroinformatics)12/19の記事です。とりあえずカレンダーを作ってみた者です。そして内容はネタ記事です。何というかすみません。\n\n皆さんは「スーパーコンピュータ」と聞くと何を思い浮かべるでしょうか。今であれば富岳でしょうし、ちょっと前なら京、地球シミュレータ、とまぁ現在も比較的日本が頑張っているコンピューティングの一分野ではないかと思います。そもそもスーパーコンピュータとは何ぞや、という話もある訳ですが（そのあたりは[Wikipedia](https://ja.wikipedia.org/wiki/%E3%82%B9%E3%83%BC%E3%83%91%E3%83%BC%E3%82%B3%E3%83%B3%E3%83%94%E3%83%A5%E3%83%BC%E3%82%BF)を参照していただくとして）、基本的には複雑なシミュレーションを高速に行う為に使われるコンピュータ、というところかと思います。\nとにかく大量の演算をこなす事が特徴のスーパーコンピュータですから当然のように相当な予算が投入されてナンボの分野ではあるのですが、かつてシミュレーション天文学の専用計算機として僅か20万円で創られたスーパーコンピュータが80年代の日本に存在していました。その名もGRAPE-1。1989年に東大で開発された、３体以上の天体の相互に働く重力を計算する為のコンピュータです。\n３体以上、というキーワードでピンと来た方もいらっしゃるかも知れません。NHK「笑わない数学」にも登場した、「２体の天体の相互作用は解析的に解けるが３体以上は解けない」というポアンカレが証明したアレです。ただ解析的には解けなくても相互作用の経過をシミュレートする事は専用のコンピュータを作れば可能だよね？と80年代の天文学者は考えました。そして実際に彼らが部品代20万円で作ってしまったのがGRAPE-1です。\n\nGRAPEおよびその後継プロジェクトは天文学の分野で様々な画期的な成果を挙げますが、少なくともGRAPE-1は「20万円で創られたスーパーコンピューター」という事実の方が世間に対してインパクトをもたらしました。前述のようにスパコンが高いのは現在でも当たり前ですが、当時も金額的に数十億円以上の代物で、それと同等の性能を(ごく限られた計算についてのみ)持つコンピュータが20万円で出来たのですから、話題になったのも当然でしょう。\n\nもちろん、20万円なのには理由があります。GRAPE-1は汎用的なコンピュータではなく「重力計算のみ」を行うパイプライン型計算機で、ユニバーサル基板上に汎用的なICを97個並べてワイヤラッピング(端子間を細い単芯ワイヤーで結線する手法。ハンダでの固定なしに結線でき解くのも容易なので、現在でも試作レベルでは使われる事はあるのではないでしょうか。作業的には100本くらいまでなら楽しいがGRAPE-1は3000本)で配線して作られていました。そこにはCPUもOSもありません。複雑な計算はGRAPE-1に接続したホストコンピュータに任せ、単純な計算のみを「大量に」「少ないクロックで」実行するパイプラインそのものがGRAPE-1の構造です。その計算速度は実に160Mflopsに達しました。今でこそ「ふーん」という数値ですが、1989年当時としてはスーパーコンピュータと呼称して差し支えない計算速度でした。\nなおGRAPEシリーズの概要についてはこれまた[Wikipedia](https://ja.wikipedia.org/wiki/GRAPE)をご参照ください。GRAPE-1の開発経緯については伊藤智義先生著の集英社新書「[スーパーコンピューターを20万円で創る](https://shinsho.shueisha.co.jp/kikan/0395-g/)」に詳しく書かれています。[小飼弾氏による書評](https://dankogai.livedoor.blog/archives/50878135.html)も熱いですね。余談ですが、この本の著者でありGRAPE-1のハードウェア開発担当者である伊藤先生はインターネット老人会級の人達には懐かしいであろう漫画「栄光なき天才たち」の原作者（一部）である他、コンピュータ黎明期の人々を描いた漫画「BRAINS」の原作者でもあります。私は特にこの後者が大好きで、その中の台詞、\n\n> 数学者が壮大な構想を描きがちなのに対して、工学者はより現実的であろうとする\n\nは工学系の人間としての生きる指針となっております。伊藤先生ありがとうございます。ただ天文学界隈は構想と現実の両方に手が出せる化け物が多いのでGRAPEというプロジェクトが80年代に成立したのだと思いますが。それはさておき。\n\nさてGRAPE-1のブロックダイヤグラムを見てみましょう。\n![diagram.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2952610/1fa77a5f-4e59-1072-4cc6-227763b68067.png)\n左端のxj, yj, zjはホストからの入力、右端のF各種はホストへの出力です。計算が行われる前に左側のRAM(x, y, z)にはすべての星（粒子）のベクトルが保存され、ホストからの入力と粒子の位置差とその-1.5乗が計算されΣがとられつつ経過をホストに送信する流れです。各ブロックは大雑把に言えば以下から成り立ちます。\n\n* シミュレーション対象となるすべての星（粒子）の３次元位置(x, y, z)をストアするRAM（固定小数点、16bit）\n* ホストから送信されてくる任意の星の位置(xj, yj, zj)とRAM上の各星の位置を減算しては次段に渡すALU\n* ALUの出力を8bitの対数に変換するテーブル、それをアドレスとして二乗や-1.5乗に変換するテーブル、それらから求めた結果を固定小数点実数に戻すテーブル、等を格納するROM\n* ROM群からの出力をひたすら加算しつつ結果Fをホストに戻すALU\n\nやりたい事は以下の数式で表されます。\n![frac.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2952610/49dd0680-f8fd-f44e-4478-e99426ef83e7.png)\nrは３次元ベクトル、eは簡単にはゼロ除算を防止する定数、mはGRAPE-1では1に決め打ちするのでここでは無視します。で、肝は任意の星とRAM上の全星の一つ一つの位置の差を各々-1.5乗するところなのですが、GRAPE-1ではそれをテーブル参照でやっています。要はハイコストな計算を全てテーブル参照でやっているのです。初めてこのブロック図を見たとき思わず「全部ROMやんけ…」と呟いたものです。\n\nそう、そこなのです。「256Kb程度のROM参照を何個か経由すれば必要な計算ができる」という仕様そのものがGRAPE-1の凄みで、求めたい値の精度は8bitの対数とそれでアドレッシングできるROMに収まる値で出せるというアイデアが「20万円」を実現できたその根幹になります。\n\nなお、ハイコストな計算をテーブル参照で行うという流儀自体はCPUの進化と共にあまり使われなくなっていきます。アーケードゲームの開発をやっている大学の先輩方(アセンブラで3D格闘ゲームを書いてしまう人達)が「おっさん開発者がテーブル使え煩いねん、使わん方が速いのに」とぼやいていたゼロ年代初頭が思い出されます。メニーコアやGPUでの並列化計算が普通になった現在では、解きたい問題のほとんどは汎用コンピュータの上で適切にコードを書いてそこそこの時間内で計算できる時代になりました。ただし、それでも片付けられない計算コストのかかる問題の為に今もスーパーコンピュータが存在します。\n\nさて。\nそんなGRAPE-1のブロック図と配線図（杉本大一郎先生の著作「手作りスーパーコンピュータへの挑戦」に掲載されています。絶版）を眺めていて思いました。\nこれ[Tang Nano 9K](https://wiki.sipeed.com/hardware/en/tang/Tang-Nano-9K/Nano-9K.html)で出来んじゃね？\n\n筆者にはたまに秋葉原の電子パーツ屋を回遊しないと死んでしまう習性があり(嘘)、無駄に基板を買ってはガラクタ箱に積んでしまう、いわゆる「積み基板」という悪癖があります。最近も「一つ積んでは俺の為」と秋月電子で購入したSiPEED社のFPGA基板「Tang Nano 9K」の存在をこの時思い出したのです。\nその売価は2480円。FPGAの学習基板と言えば１万円超えが普通であった(現在もメジャーなメーカーではそれは普通ですが)頃から比べると学習障壁が相当低くなったのは有難い事です。\n\nTang Nano 9Kに搭載されているFPGA、GoWin社GW1NR-9のスペックを見てみましょう。RISC-Vの搭載を意識した設計とかでまぁまぁ色々と乗っかっています。\n\n* Logic Unit: 8640\n* Flip-Flop: 6480\n* ShadowSRAM: 17280bit\n* Block SRAM: 468Kbit(18Kbit x 26ブロック)\n* pSRAM: 64Mbit\n* 18x18bit乗算器: 20\n\nそしてGRAPE-1的な何かをTang Nano 9Kで実現する事を検討してみましょう。恐らくロジック数が足りないという事はないと思います。星の位置情報を保存するRAMとしてはBlockSRAMを使いましょう。GRAPE-1のRAM合計(256Kb３個)と比較するとBRAM108Kbは明らかに足りませんが、星の数の上限を数K個に抑えれば良いのです。とりあえず動くモノを作るのがこういう時は大切です。\nそもそもですよ、GRAPE-1を2022年に再現しようとする思い付き自体が全く意味の無い事であり、私の興味を満たせればそれで良い訳であります。なお私は現在電波望遠鏡の解析ソフトウェアの開発に携わっていますが、FPGAについても天文学についても素人です。電子工学の素人である天文学者達が創り上げたGRAPE-1を、天文学と組込系の素人である筆者がやろうとする事にそこそこの面白さと発見が(私の中だけで)生まれるのではないかと思います。\n\n話を回路検討に戻して、固定小数点実数の減算及びΣ加算器については特に考える事はないでしょう。ホストPCとの通信も「とりあえず動かす」の精神でUSB-UARTによるシリアル通信を使い、そこがボトルネックになればSPIへの切り替えを検討します。問題は対数変換と位置微分の-1.5乗をどう実現するかですが、実数→対数変換以外はどういう手を考えてもクロック数でテーブル参照より優位な手段が今のところ思い付かないので、今はPSRAMに全部詰め込む方向で考えてみます。GoWinが提供しているIPではPSRAMの読み出しクロック数が非常に多いものの、少ないクロック数で読み出せるモジュールを作成していらっしゃる方がいますのでそれを念頭に置きます。PSRAMの初期化については、MicroSDに初期化用データを置いておいて起動時に読み出す、といったところでしょうか。この参照テーブルデータをMicroSDの差し替えで切り替えられればいろいろな応用が効きそうな気がします。PSRAMがどうやら使えないようであればEPROMを外付けするとかおかしな行為に走りましょう。大丈夫！うちは平均的な家庭なのでROMライタやEPROMイレーザくらいは掘れば出てきます。\n最終的に使い物にならなくても積み基板の供養にはなりますし、SystemVerilogの勉強にもなるのでOKでしょう。穴は…無いな…(誰かに怒られない限り…)。なおTangPrimer20Kが入手できればそちらに切り替えるかも知れません。その際は…3000円？\n\n\nさてここまで書いてみてこの記事が１、２回程度で収まる内容ではない事に気が付きました。ここらで切らせて頂いて、次回は開発環境構築について書く予定です。\n",
            coediting: false,
            commentsCount: 5,
            createdAt: "2021-07-27T04:39:34+09:00",
            id: "703bfcea027a70c1cec6",
            likesCount: 3359,
            private: false,
            stocksCount: 2250,
            tags: [
                QiitaItemTag(name: "初心者", versions: [])

            ],
            title: "最初から強いやつの特徴",
            updatedAt: "2021-12-18T15:36:38+09:00",
            url: "https://qiita.com/zamis/items/703bfcea027a70c1cec6",
            user: QiitaUser(
                description: "",
                facebookId: "profile.php?id=100010509345440",
                followeesCount: 39,
                followersCount: 175,
                githubLoginName: "zahmis",
                id: "zamis",
                itemsCount: 6,
                linkedinId: "",
                location: "Tokyo",
                name: "zamis",
                organization: "",
                permanentId: 575650,
                profileImageUrl: "https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/575650/profile-images/1606922693",
                teamOnly: false,
                twitterScreenName: "sizmaYosimaz",
                websiteUrl: ""
            ),
            pageViewsCount: nil
        )
    }
}
